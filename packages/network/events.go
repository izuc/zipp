package network

import (
	"github.com/izuc/zipp.foundation/core/slot"
	"github.com/izuc/zipp.foundation/crypto/identity"
	"github.com/izuc/zipp.foundation/ds/advancedset"
	"github.com/izuc/zipp.foundation/ds/orderedmap"
	"github.com/izuc/zipp.foundation/runtime/event"
	"github.com/izuc/zipp/packages/core/commitment"
	"github.com/izuc/zipp/packages/protocol/engine/notarization"
	"github.com/izuc/zipp/packages/protocol/models"
)

// region Events ///////////////////////////////////////////////////////////////////////////////////////////////////////

type Events struct {
	BlockReceived                 *event.Event1[*BlockReceivedEvent]
	BlockRequestReceived          *event.Event1[*BlockRequestReceivedEvent]
	SlotCommitmentReceived        *event.Event1[*SlotCommitmentReceivedEvent]
	SlotCommitmentRequestReceived *event.Event1[*SlotCommitmentRequestReceivedEvent]
	AttestationsReceived          *event.Event1[*AttestationsReceivedEvent]
	AttestationsRequestReceived   *event.Event1[*AttestationsRequestReceivedEvent]
	Error                         *event.Event1[*ErrorEvent]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		BlockReceived:                 event.New1[*BlockReceivedEvent](),
		BlockRequestReceived:          event.New1[*BlockRequestReceivedEvent](),
		SlotCommitmentReceived:        event.New1[*SlotCommitmentReceivedEvent](),
		SlotCommitmentRequestReceived: event.New1[*SlotCommitmentRequestReceivedEvent](),
		AttestationsReceived:          event.New1[*AttestationsReceivedEvent](),
		AttestationsRequestReceived:   event.New1[*AttestationsRequestReceivedEvent](),
		Error:                         event.New1[*ErrorEvent](),
	}
})

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region BlockReceivedEvent ///////////////////////////////////////////////////////////////////////////////////////////

type BlockReceivedEvent struct {
	Block  *models.Block
	Source identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region BlockRequestReceivedEvent ////////////////////////////////////////////////////////////////////////////////////

type BlockRequestReceivedEvent struct {
	BlockID models.BlockID
	Source  identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region SlotCommitmentReceivedEvent /////////////////////////////////////////////////////////////////////////////////

type SlotCommitmentReceivedEvent struct {
	Commitment *commitment.Commitment
	Source     identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region SlotCommitmentRequestReceivedEvent //////////////////////////////////////////////////////////////////////////

type SlotCommitmentRequestReceivedEvent struct {
	CommitmentID commitment.ID
	Source       identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region AttestationsReceivedEvent ////////////////////////////////////////////////////////////////////////////////////

type AttestationsReceivedEvent struct {
	Commitment   *commitment.Commitment
	BlockIDs     models.BlockIDs
	Attestations *orderedmap.OrderedMap[slot.Index, *advancedset.AdvancedSet[*notarization.Attestation]]
	Source       identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region AttestationsRequestReceivedEvent /////////////////////////////////////////////////////////////////////////////

type AttestationsRequestReceivedEvent struct {
	Commitment *commitment.Commitment
	EndIndex   slot.Index
	Source     identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region ErrorEvent ///////////////////////////////////////////////////////////////////////////////////////////////////

type ErrorEvent struct {
	Error  error
	Source identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////
